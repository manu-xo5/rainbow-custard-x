---
import Layout from '@/layouts/Layout.astro'
import Navbar from '@/components/Navbar.astro'
import BackArrow from '@/icons/back.svg?raw'
import Loader from '@/icons/loader.svg?raw'
import { getNotes, getFolder, updateNote, addNote } from '@/lib/api'
import * as O from '@/lib/O'

let fd
let _ =
  Astro.request.method === 'POST' && (fd = await Astro.request.formData()).get('_action') === 'new_note'
    ? await O.pipe(
        0,
        () => Object.fromEntries(fd),
        O.tryCatch((body) => addNote(body))
      )
    : Astro.request.method === 'POST'
    ? await O.pipe(
        fd,
        Object.fromEntries,
        O.tryCatch((body) => updateNote(body.folder_id, body.note_id, String(body.note).trim())),
        (_) => console.count('hit ' + fd.get('note'))
      )
    : null

const someData = getNotes(Astro.params.id)
const someFolder = getFolder(Astro.params.id)
const data = await someData
const folder = await someFolder

if (folder == null || !folder.title) {
  return Astro.redirect('/404')
}
---

<Layout>
  <Navbar title="Memo">
    <a slot="left" href="/">
      <Fragment set:html={BackArrow} />
    </a>

    <a slot="right" class="text-base" href={`/folder/${Astro.params.id}/notes-edit`}>Edit</a>
  </Navbar>

  <style is:inline>
    .gradiant {
background-image: linear-gradient(135deg, rgba(255,255,255,0) 0%, rgba(0,0,0,0.2) 100%);

    }
    .grow-wrap {
      display: grid;
    }
    .grow-wrap::after {
      content: attr(data-replicated-value) ' ';
      white-space: pre-wrap;
      visibility: hidden;
      height: 100%;
    }

    .grow-wrap > textarea,
    .grow-wrap::after {
      font: inherit;
      padding: 0.5rem;
      word-wrap: break-word;
      text-wrap: unrestricted;

      /* Place on top of each other */
      grid-area: 1 / 1 / 2 / 2;
    }
  </style>

  <main>
    <div class="flex py-4.5 px-5 border-b border-primary items-center">
      <div class="h-[14px] leading-[14px]">{folder.icon}</div>&nbsp;
      <div class="title capitalize flex items-center">
        {folder.title} | #{data.length}
        <span id="indicator" class="fill-accent ml-2.5 htmx-indicator">
          <Fragment set:html={Loader} />
        </span>
      </div>

      <div class="last_updated text-base text-border ml-auto">Last Update: 19/09</div>
    </div>

    <div id="notes-list">
      {
        data.map((note: any) => (
          <form
            method="POST"
            class="notes-form m-5"
            hx-get="/abs"
            hx-trigger="hold"
            hx-select="body"
            hx-target="body"
          >
            <div class="grow-wrap text-base leading-[24px]" data-replicated-value={note.note}>
              <input type="hidden" name="folder_id" value={Astro.params.id} />
              <input type="hidden" name="note_id" value={note.id} />
              <textarea
                id={note.id}
                hx-trigger="keyup changed delay:1000"
                hx-post=""
                hx-swap="none"
                hx-sync="this:replace"
                hx-indicator="#indicator"
                name="note"
                oninput="
                this.parentNode.dataset.replicatedValue = this.value;
                "
                style={{
                  background-color: folder.accentColor || "#777"
                }}
                class="gradiant rounded-sm w-full block outline-none"
              >{note.note}</textarea>
            </div>
          </form>
        ))
      }

      <form class="notes-form m-5">
        <div class="grow-wrap text-base leading-[24px]" data-replicated-value="">
          <input type="hidden" name="folder_id" value={Astro.params.id} />
          <input type="hidden" name="_action" value="new_note" />
          <textarea
            name="note"
            hx-trigger="keyup changed delay:1000"
            hx-post=""
            hx-select="#notes-list"
            hx-target="#notes-list"
            hx-sync="this:replace"
            oninput="
            this.parentNode.dataset.replicatedValue = this.value;
            "
            class="bg-primary rounded-sm w-full block outline-none"
            placeholder="Add New Note..."></textarea>
        </div>
      </form>
    </div>
  </main>
</Layout>
