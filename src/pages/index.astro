---
import Layout from '../layouts/Layout.astro';
import * as db from "../lib/api"
let data;
if (Astro.request.method === "POST") {
  data = await Astro.request.formData();
  db.postNote({
    folder: data.get("folder"),
    text: data.get("message"),
  })
}

let allNotes = db.getNote();
---
<style>
  --bg: zinc-700
  --bg-elem: zinc-800
  --border: zinc-500
  --radius: sm md
  --accent: blue-600
</style>
<Layout>

  <div class="relative">
    <select class="block bg-primary capitalize font-semibold">
      <option>time</option>
      <option>a-z</option>
    </select>

    <ul class="bg-primary rounded-md border p-1.5 inline-grid gap-1.5 min-w-[calc(100vw*0.1)]">
      <li class="text-zinc-300 font-bold">Folder 1</li>

      {/* all notes */}
      {allNotes.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(note => note.text).map(message => 
        <li class="bg-zinc-800 border-t border-zinc-500 [&:has(input:checked)]:bg-blue-600">
          <label class="rounded-sm py-1.5 px-2.5 inline-block w-full">
            <input type="checkbox" hidden />
            {message}
          </label>
        </li>
      )}
    </ul>

      <form class="sticky bottom-0" method="POST" enctype="multipart/form-data">
        <input class="w-full block border border-zinc-500 font-inherit px-2.5 py-1.5 text-white bg-zinc-800" type="text" name="folder" value=""  required />
        <input class="w-full block border border-zinc-500 font-inherit px-2.5 py-1.5 text-white bg-zinc-800" type="text" name="message" value="" required />

        <button class="w-full font-semibold px-2.5 py-1.5 bg-blue-600 rounded-sm">Send</button>
      </form>
    </div>
</Layout>

